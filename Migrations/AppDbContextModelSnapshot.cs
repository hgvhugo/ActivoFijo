// <auto-generated />
using System;
using ActivoFijo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActivoFijo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivoFijo.Models.Camb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cat_cambs");
                });

            modelBuilder.Entity("ActivoFijo.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_contratos");
                });

            modelBuilder.Entity("ActivoFijo.Models.Cucop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cat_cucop");
                });

            modelBuilder.Entity("ActivoFijo.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionId")
                        .IsUnique();

                    b.ToTable("tbl_empleados");
                });

            modelBuilder.Entity("ActivoFijo.Models.EmpleadoUnidadAdministrativa", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadAdministrativaId")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoId", "UnidadAdministrativaId");

                    b.HasIndex("UnidadAdministrativaId");

                    b.ToTable("tbr_empleado_unidad_administrativa");
                });

            modelBuilder.Entity("ActivoFijo.Models.FotosBienActivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FotoBien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistroBienesId")
                        .HasColumnType("int");

                    b.Property<int>("TipoFotoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroBienesId");

                    b.ToTable("tbl_fotos_bien_activo");
                });

            modelBuilder.Entity("ActivoFijo.Models.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cat_partidas");
                });

            modelBuilder.Entity("ActivoFijo.Models.RegistroBienes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CambId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoBien")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("CucopId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("EstatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEfectos")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoBien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FotosId")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreBien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartidaId")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadAdministrativaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorDepreciado")
                        .HasColumnType("float");

                    b.Property<double>("ValorFactura")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CambId")
                        .IsUnique();

                    b.HasIndex("CucopId")
                        .IsUnique();

                    b.HasIndex("EmpleadoId")
                        .IsUnique();

                    b.HasIndex("PartidaId")
                        .IsUnique();

                    b.HasIndex("UbicacionId")
                        .IsUnique();

                    b.HasIndex("UnidadAdministrativaId")
                        .IsUnique();

                    b.ToTable("tbl_registro_bienes");
                });

            modelBuilder.Entity("ActivoFijo.Models.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cat_ubicaciones");
                });

            modelBuilder.Entity("ActivoFijo.Models.UnidadAdministrativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUnidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cat_unidades_administrativas");
                });

            modelBuilder.Entity("ActivoFijo.Models.Empleado", b =>
                {
                    b.HasOne("ActivoFijo.Models.Ubicacion", "Ubicacion")
                        .WithOne("Empleado")
                        .HasForeignKey("ActivoFijo.Models.Empleado", "UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("ActivoFijo.Models.EmpleadoUnidadAdministrativa", b =>
                {
                    b.HasOne("ActivoFijo.Models.Empleado", "Empleado")
                        .WithMany("EmpleadoUnidadesAdministrativas")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActivoFijo.Models.UnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("EmpleadoUnidadAdministrativas")
                        .HasForeignKey("UnidadAdministrativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ActivoFijo.Models.FotosBienActivo", b =>
                {
                    b.HasOne("ActivoFijo.Models.RegistroBienes", "RegistroBienes")
                        .WithMany("FotosBienActivo")
                        .HasForeignKey("RegistroBienesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistroBienes");
                });

            modelBuilder.Entity("ActivoFijo.Models.RegistroBienes", b =>
                {
                    b.HasOne("ActivoFijo.Models.Camb", "Camb")
                        .WithOne("RegistroBienes")
                        .HasForeignKey("ActivoFijo.Models.RegistroBienes", "CambId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActivoFijo.Models.Cucop", "Cucop")
                        .WithOne("RegistroBienes")
                        .HasForeignKey("ActivoFijo.Models.RegistroBienes", "CucopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActivoFijo.Models.Empleado", "Empleado")
                        .WithOne("RegistroBienes")
                        .HasForeignKey("ActivoFijo.Models.RegistroBienes", "EmpleadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ActivoFijo.Models.Partida", "Partida")
                        .WithOne("RegistroBienes")
                        .HasForeignKey("ActivoFijo.Models.RegistroBienes", "PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActivoFijo.Models.Ubicacion", "Ubicacion")
                        .WithOne("RegistroBienes")
                        .HasForeignKey("ActivoFijo.Models.RegistroBienes", "UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActivoFijo.Models.UnidadAdministrativa", "UnidadAdministrativa")
                        .WithOne("RegistroBienes")
                        .HasForeignKey("ActivoFijo.Models.RegistroBienes", "UnidadAdministrativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camb");

                    b.Navigation("Cucop");

                    b.Navigation("Empleado");

                    b.Navigation("Partida");

                    b.Navigation("Ubicacion");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ActivoFijo.Models.Camb", b =>
                {
                    b.Navigation("RegistroBienes")
                        .IsRequired();
                });

            modelBuilder.Entity("ActivoFijo.Models.Cucop", b =>
                {
                    b.Navigation("RegistroBienes")
                        .IsRequired();
                });

            modelBuilder.Entity("ActivoFijo.Models.Empleado", b =>
                {
                    b.Navigation("EmpleadoUnidadesAdministrativas");

                    b.Navigation("RegistroBienes")
                        .IsRequired();
                });

            modelBuilder.Entity("ActivoFijo.Models.Partida", b =>
                {
                    b.Navigation("RegistroBienes")
                        .IsRequired();
                });

            modelBuilder.Entity("ActivoFijo.Models.RegistroBienes", b =>
                {
                    b.Navigation("FotosBienActivo");
                });

            modelBuilder.Entity("ActivoFijo.Models.Ubicacion", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();

                    b.Navigation("RegistroBienes")
                        .IsRequired();
                });

            modelBuilder.Entity("ActivoFijo.Models.UnidadAdministrativa", b =>
                {
                    b.Navigation("EmpleadoUnidadAdministrativas");

                    b.Navigation("RegistroBienes")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
